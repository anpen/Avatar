apply plugin: 'com.android.application'

android {
  compileSdkVersion 23
  buildToolsVersion "23.0.0"
  defaultConfig {
    applicationId "com.oudmon.avatar"
    minSdkVersion 16
    targetSdkVersion 23
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  packagingOptions {
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/MANIFEST.MF'
  }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  compile 'com.android.support:appcompat-v7:23.+'

  compile 'com.tbruyelle.rxpermissions2:rxpermissions:0.8.2@aar'
  compile 'io.reactivex.rxjava2:rxjava:2.0.2'

  testCompile 'junit:junit:4.12'
}

task deployDebug(type: Exec, dependsOn: 'installDebug') {
/*  def rootDir = project.rootDir
  def localProperties = new File(rootDir, "local.properties");
  if (localProperties.exists()) {
    Properties properties = new Properties()
    localProperties.withInputStream {
      inputStream -> properties.load(inputStream)
    }
    def sdkDir = properties.getProperty('sdk.dir')
    def adb = "$sdkDir/platform-tools/adb"
    commandLine "$adb", 'shell', 'am', 'start', '-n', 'com.package/com.package.YourMainActivity'
  }*/
  commandLine android.getAdbExe(), 'shell', 'am', 'start', '-n', "${android.defaultConfig.applicationId}/.MainActivity"
}
